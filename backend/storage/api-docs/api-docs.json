{
    "openapi": "3.0.0",
    "info": {
        "title": "El mejor swagger de la historia",
        "description": "API para gestiar el proyecto de fidelizacion",
        "contact": {
            "email": "soporte@tuempresa.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/cities": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Retrieve a list of cities",
                "operationId": "a27dd2b6882a90db7a2dd9d66b3db104",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/City"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cities"
                ],
                "summary": "Create a new city",
                "operationId": "0c5fa86d00425be5a99cd875d10194b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/cities/{id}": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Retrieve a specific city",
                "operationId": "929bb5997ce0196edffdd56ebc512b5f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cities"
                ],
                "summary": "Update a specific city",
                "operationId": "6de0fea74601f9cc54b44cfda58d0dbe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cities"
                ],
                "summary": "Delete a specific city",
                "operationId": "c7eb2706ee6f40cc19ce27b288ba0641",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "City deleted successfully"
                    },
                    "404": {
                        "description": "City not found"
                    }
                }
            }
        },
        "/api/persons": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Retrieve a list of persons",
                "operationId": "107a8be4c2c08fe6669c64462f1aad20",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Create a new person",
                "operationId": "676c149826876351e3493b978749ccc5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Person created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/persons/{id}": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Retrieve a specific person",
                "operationId": "da8f22a7533683500c06f5dc25a53e4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Persons"
                ],
                "summary": "Update a specific person",
                "operationId": "10838011da2bb73bd80810b158afe2e9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Person updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Persons"
                ],
                "summary": "Delete a specific person",
                "operationId": "6d623c98fa609eb109fb50587401ac71",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Person deleted successfully"
                    },
                    "404": {
                        "description": "Person not found"
                    }
                }
            }
        },
        "/api/states": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Retrieve a list of states",
                "operationId": "4136acf478452d9e777d0a2ef5ef82ef",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "States"
                ],
                "summary": "Create a new state",
                "operationId": "13966ecd36f0f53394a45417fba6da76",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "State created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/states/{id}": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Retrieve a specific state",
                "operationId": "c31ac7dd51a3bfa8594c1a7a22cf09cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "States"
                ],
                "summary": "Update a specific state",
                "operationId": "8f1648448a29db32e3b505fbf287c61d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "State updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "States"
                ],
                "summary": "Delete a specific state",
                "operationId": "d4178890ff552194d46de969fab2cb1d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "State deleted successfully"
                    },
                    "404": {
                        "description": "State not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a list of users",
                "operationId": "eaedf6aa84fde38a08bf5d87308169f7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "e2308aae8643f8f4d79821a6399114f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a specific user",
                "operationId": "e0e2899dacd82633162b668cc31d8116",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a specific user",
                "operationId": "15f5757522724ebca9bac30479321b45",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a specific user",
                "operationId": "98b6e09e3d231384330198299feb017f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "City": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "New York"
                    },
                    "id_state": {
                        "type": "integer",
                        "example": 1
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CityRequest": {
                "required": [
                    "name",
                    "id_state"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "New York"
                    },
                    "id_state": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Person": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "national_id": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "id_city": {
                        "type": "integer",
                        "example": 1
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PersonRequest": {
                "required": [
                    "first_name"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "national_id": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "id_city": {
                        "type": "integer",
                        "example": 1
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    }
                },
                "type": "object"
            },
            "State": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Active"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "id_person": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "password_hash": {
                        "type": "string",
                        "example": "$2y$10$..."
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "suspended"
                        ],
                        "example": "active"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "required": [
                    "username",
                    "password_hash",
                    "status"
                ],
                "properties": {
                    "id_person": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "password_hash": {
                        "type": "string",
                        "example": "password123"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "suspended"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Cities",
            "description": "Cities"
        },
        {
            "name": "Persons",
            "description": "Persons"
        },
        {
            "name": "States",
            "description": "States"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}